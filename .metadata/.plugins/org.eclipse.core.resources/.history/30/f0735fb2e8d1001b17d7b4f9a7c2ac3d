package javatpoint;

public class printPatterns {

	public static void printTriangle(int rows) {
		
		//     * 
		//    * * 
		//   * * * 
		//  * * * * 
		// * * * * * 

		
		for (int i = 0; i < rows; i++) {
			for (int j = 0; j < rows - i - 1; j++) {
				System.out.print(" ");
			}
			for (int j = 0; j <= i; j++) {
				System.out.print("*" + " ");
			}
			System.out.println();
		}
	}

	public static void printTriangleWithDigits(int rows) {
		
		//    0 
		//   1 2 
		//   3 4 5 
		//  6 7 8 9 
		// 10 11 12 13 14 

		int count = 0;

		for (int i = 0; i < rows; i++) {
			for (int j = 0; j < rows - i - 1; j++) {
				System.out.print(" ");
			}
			for (int j = 0; j <= i; j++) {
				System.out.print(count++ + " ");
			}
			System.out.println();
		}
	}
	
	public static void printStaircase(int rows)
	{
		//     *
		//    **
		//   ***
		//  ****
		// *****
		
		for(int i=0;i<rows;i++)
		{
			for(int j=0;j<rows-i-1;j++)
			{
				System.out.print(" ");
			}
			
			for(int j=0;j<=i;j++)
			{
				System.out.print("*");
			}
			System.out.println();
		}
	}
	
	public static void printSpiral(int rows)
	{
		int[][] m = new int[rows][rows];
		
		int top=0,left=0,right=rows-1,down=rows-1,count=0,dir=0;
		
		while(top<=down && left<=right)
		{
			if(dir==0)
			{
				for(int i=left;i<=right;i++)
				{
					m[top][i] = count++;
				}
				top+=1;
			}
			
			else if(dir==1)
			{
				for(int i=top;i<=down;i++)
				{
					m[i][right] = count++;
				}
				right-=1;
			}
			
			else if(dir==2)
			{
				for(int i=right;i>=left;i--)
				{
					m[down][i] = count++;
				}
				down-=1;
			}
			
			else if(dir==3)
			{
				for(int i=down;i>=top;i--)
				{
					m[i][left] = count++;
				}
				left+=1;
			}
			dir=(dir+1)%4;
		}
		
		for(int i=0;i<rows;i++)
		{
			for(int j=0;j<rows;j++)
			{
				System.out.print(m[i][j]+" ");
			}
			System.out.println();
		}
		
	}

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		//printTriangle(5);
		//printTriangleWithDigits(5);
		printStaircase(5);
	}

}
